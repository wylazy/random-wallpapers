#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import os
import json
import glob
from pathlib import Path

edge_functions_str = """// This file was generated by generate_functions.py
const WALLPAPERS = TEMPLATE_WALLPAPERS_JSON_LIST;

// 处理随机壁纸请求
export async function onRequest(context) {
  const { request } = context;
  const url = new URL(request.url);
  const resolution = url.searchParams.get('resolution') || '1080p';

  try {
    // 获取随机壁纸 URL
    const wallpaperUrl = getRandomWallpaper(resolution);

    // 返回 302 重定向
    return new Response(null, {
      status: 302,
      headers: {
        'Location': wallpaperUrl
      }
    });
  } catch (error) {
    return new Response(`Error: ${error.message}`, { status: 500 });
  }
}

// 获取随机壁纸
function getRandomWallpaper(resolution) {
  // 如果没有壁纸，抛出错误
  if (WALLPAPERS.length === 0) {
    throw new Error('No wallpapers found');
  }

  // 随机选择一个壁纸
  const randomIndex = Math.floor(Math.random() * WALLPAPERS.length);
  const wallpaper = WALLPAPERS[randomIndex];

  // 根据分辨率返回 URL
  if (resolution.toLowerCase() === '4k') {
    return wallpaper['url_4k'];
  } else if (resolution.toLowerCase() === '1080p') {
    return wallpaper['url_1080p'];
  } else {
    // 默认返回 1080P，如果不存在则返回 4K
    return wallpaper['url_1080p'] || wallpaper['url_4k'];
  }
}
"""

def main():
    # 获取脚本所在目录
    script_dir = Path(__file__).parent.absolute()
    
    all_wallpapers = '[]'
    with open(script_dir / "all_wallpapers.json", 'r', encoding='utf-8') as f:
        all_wallpapers = f.read()
    edge_content = edge_functions_str.replace("TEMPLATE_WALLPAPERS_JSON_LIST", all_wallpapers)

    out_file_edge = f"{script_dir}/functions/random_wallpaper.js"
    # 将合并后的数据写入输出文件
    with open(out_file_edge, 'w', encoding='utf-8') as f:
        f.write(edge_content)
    print(f"生成: {out_file_edge} 成功！")

if __name__ == "__main__":
    main()